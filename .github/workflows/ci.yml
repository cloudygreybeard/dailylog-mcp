name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      env:
        CGO_ENABLED: 0
      
    - name: Run tests
      run: go test -v -coverprofile=coverage.out ./...
      env:
        CGO_ENABLED: 0
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      env:
        CGO_ENABLED: 0
      
    - name: Verify dependencies
      run: go mod verify
      env:
        CGO_ENABLED: 0
      
    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.8
      env:
        CGO_ENABLED: 0
        
    - name: Run golangci-lint
      run: |
        $(go env GOPATH)/bin/golangci-lint run --timeout=5m
      env:
        CGO_ENABLED: 0
        
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        
    - name: Download dependencies
      run: go mod download
      env:
        CGO_ENABLED: 0
      
    - name: Build MCP server
      run: |
        cd cmd/mcp-server
        go build -v -o ../../build/bin/dailylog .
      env:
        CGO_ENABLED: 0
        
    - name: Build CLI tool
      run: |
        cd cmd/dailyctl
        go build -v -o ../../build/bin/dailyctl .
      env:
        CGO_ENABLED: 0
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: build/bin/
        
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        
    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: './...'
      env:
        CGO_ENABLED: 0



